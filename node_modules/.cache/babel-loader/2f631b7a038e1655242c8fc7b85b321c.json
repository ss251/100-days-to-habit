{"ast":null,"code":"var _jsxFileName = \"/Users/thescoho/Documents/100-days-to-habit/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Button from \"./Button\";\nimport base from \"./base\";\nimport buttons from \"./buttons\";\nimport BtnContainer from \"./BtnContainer\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      buttons: buttons\n    };\n\n    this.clickButton = key => {\n      const buttons = { ...this.state.buttons\n      };\n      buttons[`button${key}`].condition = !buttons[`button${key}`].condition;\n      this.setState({\n        buttons\n      });\n    };\n  }\n\n  saveStateToLocalStorage() {\n    // for every item in React state\n    for (let key in this.state) {\n      // save to localStorage\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  componentDidMount() {\n    // add event listener to save state to localStorage\n    // when user leaves/refreshes the page\n    window.addEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this));\n    const buttons = JSON.parse(localStorage.getItem(\"buttons\"));\n    this.setState({\n      buttons\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this));\n    this.saveStateToLocalStorage();\n  }\n  /* componentWillUnmount() {\n    base.removeBinding(this.ref);\n  } */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, \"100 Days to Habit\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BtnContainer, {\n      clickButton: this.clickButton,\n      buttonState: this.state.buttons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/thescoho/Documents/100-days-to-habit/src/App.js"],"names":["React","Button","base","buttons","BtnContainer","App","Component","state","clickButton","key","condition","setState","saveStateToLocalStorage","localStorage","setItem","JSON","stringify","componentDidMount","window","addEventListener","bind","parse","getItem","componentWillUnmount","removeEventListener","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNJ,MAAAA,OAAO,EAAEA;AADH,KADwB;;AAAA,SAoChCK,WApCgC,GAoCjBC,GAAD,IAAS;AACrB,YAAMN,OAAO,GAAG,EAAE,GAAG,KAAKI,KAAL,CAAWJ;AAAhB,OAAhB;AACAA,MAAAA,OAAO,CAAE,SAAQM,GAAI,EAAd,CAAP,CAAwBC,SAAxB,GAAoC,CAACP,OAAO,CAAE,SAAQM,GAAI,EAAd,CAAP,CAAwBC,SAA7D;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AACD,KAxC+B;AAAA;;AAKhCS,EAAAA,uBAAuB,GAAG;AACxB;AACA,SAAK,IAAIH,GAAT,IAAgB,KAAKF,KAArB,EAA4B;AAC1B;AACAM,MAAAA,YAAY,CAACC,OAAb,CAAqBL,GAArB,EAA0BM,IAAI,CAACC,SAAL,CAAe,KAAKT,KAAL,CAAWE,GAAX,CAAf,CAA1B;AACD;AACF;;AAEDQ,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACAC,IAAAA,MAAM,CAACC,gBAAP,CACE,cADF,EAEE,KAAKP,uBAAL,CAA6BQ,IAA7B,CAAkC,IAAlC,CAFF;AAIA,UAAMjB,OAAO,GAAGY,IAAI,CAACM,KAAL,CAAWR,YAAY,CAACS,OAAb,CAAqB,SAArB,CAAX,CAAhB;AACA,SAAKX,QAAL,CAAc;AAAER,MAAAA;AAAF,KAAd;AACD;;AAEDoB,EAAAA,oBAAoB,GAAG;AACrBL,IAAAA,MAAM,CAACM,mBAAP,CACE,cADF,EAEE,KAAKZ,uBAAL,CAA6BQ,IAA7B,CAAkC,IAAlC,CAFF;AAIA,SAAKR,uBAAL;AACD;AAED;;;;;AAUAa,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,WAAW,EAAE,KAAKjB,WADpB;AAEE,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWJ,OAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF;AAaD;;AAxD+B;;AA2DlC,eAAeE,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Button from \"./Button\";\nimport base from \"./base\";\nimport buttons from \"./buttons\";\nimport BtnContainer from \"./BtnContainer\";\n\nclass App extends React.Component {\n  state = {\n    buttons: buttons,\n  };\n\n  saveStateToLocalStorage() {\n    // for every item in React state\n    for (let key in this.state) {\n      // save to localStorage\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  componentDidMount() {\n    // add event listener to save state to localStorage\n    // when user leaves/refreshes the page\n    window.addEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n    const buttons = JSON.parse(localStorage.getItem(\"buttons\"));\n    this.setState({ buttons });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n    this.saveStateToLocalStorage();\n  }\n\n  /* componentWillUnmount() {\n    base.removeBinding(this.ref);\n  } */\n\n  clickButton = (key) => {\n    const buttons = { ...this.state.buttons };\n    buttons[`button${key}`].condition = !buttons[`button${key}`].condition;\n    this.setState({ buttons });\n  };\n\n  render() {\n    return (\n      <div>\n        <header>\n          <h1>100 Days to Habit</h1>\n        </header>\n        <div>\n          <BtnContainer\n            clickButton={this.clickButton}\n            buttonState={this.state.buttons}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}