{"ast":null,"code":"var _jsxFileName = \"/Users/thescoho/Documents/100-days-to-habit/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Button from \"./Button\";\nimport base from \"./base\";\nimport buttons from \"./buttons\";\nimport BtnContainer from \"./BtnContainer\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      buttons: buttons\n    };\n\n    this.clickButton = key => {\n      const buttons = { ...this.state.buttons\n      };\n      buttons[`button${key}`].condition = !buttons[`button${key}`].condition;\n      this.setState({\n        buttons\n      });\n    };\n  }\n\n  hydrateStateWithLocalStorage() {\n    // for all items in state\n    for (let key in this.state) {\n      // if the key exists in localStorage\n      if (localStorage.hasOwnProperty(key)) {\n        // get the key's value from localStorage\n        let value = localStorage.getItem(key); // parse the localStorage string and setState\n\n        try {\n          value = JSON.parse(value);\n          this.setState({\n            [key]: value\n          });\n        } catch (e) {\n          // handle empty string\n          this.setState({\n            [key]: value\n          });\n        }\n      }\n    }\n  }\n\n  saveStateToLocalStorage() {\n    // for every item in React state\n    for (let key in this.state) {\n      // save to localStorage\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  componentDidMount() {\n    const buttons = JSON.parse(localStorage.getItem(\"buttons\"));\n    this.setState({\n      buttons\n    }); // add event listener to save state to localStorage\n    // when user leaves/refreshes the page\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this));\n    this.saveStateToLocalStorage();\n  }\n  /* componentWillUnmount() {\n    base.removeBinding(this.ref);\n  } */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"100 Days to Habit\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BtnContainer, {\n      clickButton: this.clickButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/thescoho/Documents/100-days-to-habit/src/App.js"],"names":["React","Button","base","buttons","BtnContainer","App","Component","state","clickButton","key","condition","setState","hydrateStateWithLocalStorage","localStorage","hasOwnProperty","value","getItem","JSON","parse","e","saveStateToLocalStorage","setItem","stringify","componentDidMount","componentWillUnmount","window","removeEventListener","bind","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNJ,MAAAA,OAAO,EAAEA;AADH,KADwB;;AAAA,SAoDhCK,WApDgC,GAoDjBC,GAAD,IAAS;AACrB,YAAMN,OAAO,GAAG,EAAE,GAAG,KAAKI,KAAL,CAAWJ;AAAhB,OAAhB;AACAA,MAAAA,OAAO,CAAE,SAAQM,GAAI,EAAd,CAAP,CAAwBC,SAAxB,GAAoC,CAACP,OAAO,CAAE,SAAQM,GAAI,EAAd,CAAP,CAAwBC,SAA7D;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AACD,KAxD+B;AAAA;;AAKhCS,EAAAA,4BAA4B,GAAG;AAC7B;AACA,SAAK,IAAIH,GAAT,IAAgB,KAAKF,KAArB,EAA4B;AAC1B;AACA,UAAIM,YAAY,CAACC,cAAb,CAA4BL,GAA5B,CAAJ,EAAsC;AACpC;AACA,YAAIM,KAAK,GAAGF,YAAY,CAACG,OAAb,CAAqBP,GAArB,CAAZ,CAFoC,CAIpC;;AACA,YAAI;AACFM,UAAAA,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAWH,KAAX,CAAR;AACA,eAAKJ,QAAL,CAAc;AAAE,aAACF,GAAD,GAAOM;AAAT,WAAd;AACD,SAHD,CAGE,OAAOI,CAAP,EAAU;AACV;AACA,eAAKR,QAAL,CAAc;AAAE,aAACF,GAAD,GAAOM;AAAT,WAAd;AACD;AACF;AACF;AACF;;AAEDK,EAAAA,uBAAuB,GAAG;AACxB;AACA,SAAK,IAAIX,GAAT,IAAgB,KAAKF,KAArB,EAA4B;AAC1B;AACAM,MAAAA,YAAY,CAACQ,OAAb,CAAqBZ,GAArB,EAA0BQ,IAAI,CAACK,SAAL,CAAe,KAAKf,KAAL,CAAWE,GAAX,CAAf,CAA1B;AACD;AACF;;AAEDc,EAAAA,iBAAiB,GAAG;AAClB,UAAMpB,OAAO,GAAGc,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACG,OAAb,CAAqB,SAArB,CAAX,CAAhB;AACA,SAAKL,QAAL,CAAc;AAAER,MAAAA;AAAF,KAAd,EAFkB,CAGlB;AACA;AACD;;AAEDqB,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,MAAM,CAACC,mBAAP,CACE,cADF,EAEE,KAAKN,uBAAL,CAA6BO,IAA7B,CAAkC,IAAlC,CAFF;AAIA,SAAKP,uBAAL;AACD;AAED;;;;;AAUAQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,WAAW,EAAE,KAAKpB,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF;AAUD;;AArE+B;;AAwElC,eAAeH,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Button from \"./Button\";\nimport base from \"./base\";\nimport buttons from \"./buttons\";\nimport BtnContainer from \"./BtnContainer\";\n\nclass App extends React.Component {\n  state = {\n    buttons: buttons,\n  };\n\n  hydrateStateWithLocalStorage() {\n    // for all items in state\n    for (let key in this.state) {\n      // if the key exists in localStorage\n      if (localStorage.hasOwnProperty(key)) {\n        // get the key's value from localStorage\n        let value = localStorage.getItem(key);\n\n        // parse the localStorage string and setState\n        try {\n          value = JSON.parse(value);\n          this.setState({ [key]: value });\n        } catch (e) {\n          // handle empty string\n          this.setState({ [key]: value });\n        }\n      }\n    }\n  }\n\n  saveStateToLocalStorage() {\n    // for every item in React state\n    for (let key in this.state) {\n      // save to localStorage\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  componentDidMount() {\n    const buttons = JSON.parse(localStorage.getItem(\"buttons\"));\n    this.setState({ buttons });\n    // add event listener to save state to localStorage\n    // when user leaves/refreshes the page\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n    this.saveStateToLocalStorage();\n  }\n\n  /* componentWillUnmount() {\n    base.removeBinding(this.ref);\n  } */\n\n  clickButton = (key) => {\n    const buttons = { ...this.state.buttons };\n    buttons[`button${key}`].condition = !buttons[`button${key}`].condition;\n    this.setState({ buttons });\n  };\n\n  render() {\n    return (\n      <div>\n        <header>\n          <h1>100 Days to Habit</h1>\n        </header>\n        <div>\n          <BtnContainer clickButton={this.clickButton} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}