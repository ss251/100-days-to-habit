{"ast":null,"code":"var _jsxFileName = \"/Users/thescoho/Documents/100-days-to-habit/src/App.js\";\nimport React, { lazy, Suspense } from \"react\";\nimport \"./App.css\";\nimport Button from \"./Button\";\nimport base from \"./base\";\nimport buttons from \"./buttons\"; //import BtnContainer from \"./BtnContainer\";\n\nconst BtnContainer = lazy(() => import(\"./BtnContainer\"));\n\nclass App extends React.Component {\n  constructor() {\n    this.ref = base.syncState(`${this.props.match.params.nameId}`, {\n      context: this,\n      state: \"buttons\"\n    });\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n  /*   saveStateToLocalStorage() {\n    // for every item in React state\n    for (let key in this.state) {\n      // save to localStorage\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n   componentDidMount() {\n    // add event listener to save state to localStorage\n    // when user leaves/refreshes the page\n    window.addEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n    const buttons = JSON.parse(localStorage.getItem(\"buttons\"));\n    this.setState({ buttons });\n  }\n   componentWillUnmount() {\n    window.removeEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n    this.saveStateToLocalStorage();\n  } */\n\n  /* componentWillUnmount() {\n    base.removeBinding(this.ref);\n  } */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"100 Days to Habit\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Suspense, {\n      fallback: /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 31\n        }\n      }, \"Still Loading\\u2026\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BtnContainer, {\n      clickButton: this.clickButton,\n      buttonState: this.state.buttons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/thescoho/Documents/100-days-to-habit/src/App.js"],"names":["React","lazy","Suspense","Button","base","buttons","BtnContainer","App","Component","constructor","ref","syncState","props","match","params","nameId","context","state","componentDidMount","componentWillUnmount","removeBinding","render","clickButton"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;AAEA,MAAMC,YAAY,GAAGL,IAAI,CAAC,MAAM,OAAO,gBAAP,CAAP,CAAzB;;AAEA,MAAMM,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ,SAAKC,GAAL,GAAWN,IAAI,CAACO,SAAL,CAAgB,GAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAAO,EAAjD,EAAoD;AAC7DC,MAAAA,OAAO,EAAE,IADoD;AAE7DC,MAAAA,KAAK,EAAE;AAFsD,KAApD,CAAX;AAID;;AAKDC,EAAAA,iBAAiB,GAAG,CAAE;;AAEtBC,EAAAA,oBAAoB,GAAG;AACrBf,IAAAA,IAAI,CAACgB,aAAL,CAAmB,KAAKV,GAAxB;AACD;AAED;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;;;;AAUAW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,WAAW,EAAE,KAAKC,WADpB;AAEE,MAAA,WAAW,EAAE,KAAKL,KAAL,CAAWZ,OAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAJF,CADF;AAeD;;AAtE+B;;AAyElC,eAAeE,GAAf","sourcesContent":["import React, { lazy, Suspense } from \"react\";\nimport \"./App.css\";\nimport Button from \"./Button\";\nimport base from \"./base\";\nimport buttons from \"./buttons\";\n//import BtnContainer from \"./BtnContainer\";\n\nconst BtnContainer = lazy(() => import(\"./BtnContainer\"));\n\nclass App extends React.Component {\n  constructor() {\n    this.ref = base.syncState(`${this.props.match.params.nameId}`, {\n      context: this,\n      state: \"buttons\",\n    });\n  }\n  state = {\n    buttons: buttons,\n  };\n\n  componentDidMount() {}\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  /*   saveStateToLocalStorage() {\n    // for every item in React state\n    for (let key in this.state) {\n      // save to localStorage\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  componentDidMount() {\n    // add event listener to save state to localStorage\n    // when user leaves/refreshes the page\n    window.addEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n    const buttons = JSON.parse(localStorage.getItem(\"buttons\"));\n    this.setState({ buttons });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n    this.saveStateToLocalStorage();\n  } */\n\n  /* componentWillUnmount() {\n    base.removeBinding(this.ref);\n  } */\n\n  clickButton = (key) => {\n    const buttons = { ...this.state.buttons };\n    buttons[`button${key}`].condition = !buttons[`button${key}`].condition;\n    this.setState({ buttons });\n  };\n\n  render() {\n    return (\n      <div>\n        <header>\n          <h1>100 Days to Habit</h1>\n        </header>\n        <div>\n          <Suspense fallback={<h1>Still Loadingâ€¦</h1>}>\n            <BtnContainer\n              clickButton={this.clickButton}\n              buttonState={this.state.buttons}\n            />\n          </Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}